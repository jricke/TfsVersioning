<Activity mc:Ignorable="sap" x:Class="TfsBuild.Versioning.Activities.Tests.TestExtractAndConvertWorkflow" this:TestExtractAndConvertWorkflow.FileSpec="AssemblyInfo.*" this:TestExtractAndConvertWorkflow.VersionSeedFilePath="TfsVersion\VersionSeed.xml" this:TestExtractAndConvertWorkflow.ForceCreateVersion="True" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mt="clr-namespace:Microsoft.TeamFoundation;assembly=Microsoft.TeamFoundation.Common" xmlns:mtbc="clr-namespace:Microsoft.TeamFoundation.Build.Client;assembly=Microsoft.TeamFoundation.Build.Client, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" xmlns:mtbc1="clr-namespace:Microsoft.TeamFoundation.Build.Client;assembly=Microsoft.TeamFoundation.Build.Client" xmlns:mtbw="clr-namespace:Microsoft.TeamFoundation.Build.Workflow;assembly=Microsoft.TeamFoundation.Build.Workflow" xmlns:mtbwa="clr-namespace:Microsoft.TeamFoundation.Build.Workflow.Activities;assembly=Microsoft.TeamFoundation.Build.Workflow" xmlns:mtbwt="clr-namespace:Microsoft.TeamFoundation.Build.Workflow.Tracking;assembly=Microsoft.TeamFoundation.Build.Workflow" xmlns:mv="clr-namespace:Microsoft.VisualBasic;assembly=System" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" xmlns:s1="clr-namespace:System;assembly=mscorlib" xmlns:s2="clr-namespace:System;assembly=System" xmlns:s3="clr-namespace:System;assembly=System.Xml" xmlns:s4="clr-namespace:System;assembly=System.Core" xmlns:s5="clr-namespace:System;assembly=System.ServiceModel" xmlns:sa="clr-namespace:System.Activities;assembly=System.Activities, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" xmlns:sa1="clr-namespace:System.Activities;assembly=System.Activities" xmlns:sad="clr-namespace:System.Activities.Debugger;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System" xmlns:scg1="clr-namespace:System.Collections.Generic;assembly=System.ServiceModel" xmlns:scg2="clr-namespace:System.Collections.Generic;assembly=System.Core" xmlns:scg3="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:scg4="clr-namespace:System.Collections.Generic;assembly=mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:sd1="clr-namespace:System.Data;assembly=System.Data.DataSetExtensions" xmlns:sd2="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:si="clr-namespace:System.IO;assembly=mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" xmlns:sl="clr-namespace:System.Linq;assembly=System.Core" xmlns:sl1="clr-namespace:System.Linq;assembly=System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" xmlns:sr="clr-namespace:System.Reflection;assembly=mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" xmlns:st="clr-namespace:System.Text;assembly=mscorlib" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" xmlns:sx="clr-namespace:System.Xml;assembly=System.Data" xmlns:sx1="clr-namespace:System.Xml;assembly=System.Xml" xmlns:sx2="clr-namespace:System.Xml;assembly=System.Runtime.Serialization" xmlns:this="clr-namespace:TfsBuild.Versioning.Activities.Tests" xmlns:tva="clr-namespace:TfsBuild.Versioning.Activities;assembly=TfsBuild.Versioning.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="SolutionName" Type="InArgument(x:String)" />
    <x:Property Name="FileSpec" Type="InArgument(x:String)" />
    <x:Property Name="SourcesDirectory" Type="InArgument(x:String)" />
    <x:Property Name="VersionSeedFilePath" Type="InArgument(x:String)" />
    <x:Property Name="ForceCreateVersion" Type="InArgument(x:Boolean)" />
    <x:Property Name="BuildNumberPrefix" Type="InArgument(x:Int32)" />
  </x:Members>
  <sap:VirtualizedContainerService.HintSize>869,3157</sap:VirtualizedContainerService.HintSize>
  <mva:VisualBasic.Settings>Assembly references and imported namespaces serialized as XML namespaces</mva:VisualBasic.Settings>
  <Sequence DisplayName="Get Version Number Patterns" sad:XamlDebuggerXmlReader.FileName="D:\_TfsProjects\BuildActivities\SolutionBuildVersioning\Main\Source\TfsBuild.Versioning.Activities.Tests\TestExtractAndConvertWorkflow.xaml" sap:VirtualizedContainerService.HintSize="829,3117" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="AssemblyVersionReplacementPattern" />
      <Variable x:TypeArguments="x:String" Name="AssemblyFileVersionReplacementPattern" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg3:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg3:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Get Version Patterns for Solution Name from Seed File" sap:VirtualizedContainerService.HintSize="807,652">
      <sap:WorkflowViewStateService.ViewState>
        <scg3:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg3:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Get AssemblyVersionPattern from Seed File" sap:VirtualizedContainerService.HintSize="264,244">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="AssemblyVersionXpathExpression" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg3:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg3:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign DisplayName="Assign XPath expression for AssemblyVersion Seed" sap:VirtualizedContainerService.HintSize="242,58">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[AssemblyVersionXpathExpression]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">["/VersionSeed/Solution[@name='" + SolutionName + "']/AssemblyVersionPattern"]</InArgument>
          </Assign.Value>
        </Assign>
        <tva:XmlExtract DisplayName="ExtractAssemblyVersionReplacementPattern" FilePath="[VersionSeedFilePath]" sap:VirtualizedContainerService.HintSize="242,22" NodeValue="[AssemblyVersionReplacementPattern]" XPathExpression="[AssemblyVersionXpathExpression]" />
      </Sequence>
      <Sequence DisplayName="Get AssemblyFileVersionPattern from Seed File" sap:VirtualizedContainerService.HintSize="264,244">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="AssemblyVersionXpathExpression" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg3:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg3:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign DisplayName="Assign XPath expression for AssemblyFileVersion Seed" sap:VirtualizedContainerService.HintSize="242,58">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[AssemblyVersionXpathExpression]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">["/VersionSeed/Solution[@name='" + SolutionName + "']/AssemblyFileVersionPattern"]</InArgument>
          </Assign.Value>
        </Assign>
        <tva:XmlExtract DisplayName="ExtractAssemblyFileVersionReplacementPattern" FilePath="[VersionSeedFilePath]" sap:VirtualizedContainerService.HintSize="242,22" NodeValue="[AssemblyFileVersionReplacementPattern]" XPathExpression="[AssemblyVersionXpathExpression]" />
      </Sequence>
    </Sequence>
    <If Condition="[AssemblyVersionReplacementPattern = &quot;Value Not Found&quot;]" DisplayName="If Version Patterns not found for solution name then check Default" sap:VirtualizedContainerService.HintSize="807,510">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="301,404">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="AssemblyVersionXpathExpression" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg3:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg3:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="242,58">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[AssemblyVersionXpathExpression]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">["/VersionSeed/Solution[@name='Default']/AssemblyVersionPattern"]</InArgument>
            </Assign.Value>
          </Assign>
          <tva:XmlExtract DisplayName="Extract Default Replacement Pattern" FilePath="[VersionSeedFilePath]" sap:VirtualizedContainerService.HintSize="242,22" NodeValue="[AssemblyVersionReplacementPattern]" XPathExpression="[AssemblyVersionXpathExpression]" />
          <Assign sap:VirtualizedContainerService.HintSize="242,58">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[AssemblyVersionXpathExpression]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">["/VersionSeed/Solution[@name='Default']/AssemblyFileVersionPattern"]</InArgument>
            </Assign.Value>
          </Assign>
          <tva:XmlExtract DisplayName="Extract Default Replacement Pattern" FilePath="[VersionSeedFilePath]" sap:VirtualizedContainerService.HintSize="242,22" NodeValue="[AssemblyFileVersionReplacementPattern]" XPathExpression="[AssemblyVersionXpathExpression]" />
        </Sequence>
      </If.Then>
    </If>
    <Sequence DisplayName="Process Version Pattern Updates" sap:VirtualizedContainerService.HintSize="807,1751">
      <Sequence.Variables>
        <Variable x:TypeArguments="mtbc1:IBuildDetail" Name="BuildDetail" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg3:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg3:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <mtbwa:GetBuildDetail sap:VirtualizedContainerService.HintSize="785,22" Result="[BuildDetail]" />
      <Sequence DisplayName="Update Version Info" sap:VirtualizedContainerService.HintSize="785,1565" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces">
        <Sequence.Variables>
          <Variable x:TypeArguments="scg3:IEnumerable(x:String)" Name="MatchingFiles" />
          <Variable x:TypeArguments="x:String" Name="FileSpecToMatch" />
          <Variable x:TypeArguments="x:String" Default="[&quot;(?&lt;AssemblyPrefix&gt;^[\[&lt;].*AssemblyVersion.*\(\&quot;&quot;)(?&lt;VersionNo&gt;.*)(?&lt;AssemblyPostfix&gt;\&quot;&quot;\)[\]&gt;])&quot;]" Modifiers="ReadOnly" Name="AssemblyVersionRegexSearchPattern" />
          <Variable x:TypeArguments="x:String" Default="[&quot;(?&lt;AssemblyPrefix&gt;^[\[&lt;].*AssemblyFileVersion.*\(\&quot;&quot;)(?&lt;VersionNo&gt;.*)(?&lt;AssemblyPostfix&gt;\&quot;&quot;\)[\]&gt;])&quot;]" Modifiers="ReadOnly" Name="AssemblyFileVersionRegexSearchPattern" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg3:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg3:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Sequence DisplayName="Validate Arguments" sap:VirtualizedContainerService.HintSize="763,51">
          <sap:WorkflowViewStateService.ViewState>
            <scg3:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg3:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If Condition="[String.IsNullOrEmpty(SourcesDirectory) Or (Not Directory.Exists(SourcesDirectory))]" DisplayName="Validate SourcesDirectory" sap:VirtualizedContainerService.HintSize="200,51">
            <sap:WorkflowViewStateService.ViewState>
              <scg3:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg3:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Throw DisplayName="Throw ArgumentException" Exception="[New ArgumentException(&quot;Please specify a valid sources directory to search for matching files&quot;, &quot;SourcesDirectory&quot;)]" sap:VirtualizedContainerService.HintSize="269,100" />
            </If.Then>
          </If>
          <If Condition="[String.IsNullOrEmpty(FileSpec)]" DisplayName="Validate FileSpec" sap:VirtualizedContainerService.HintSize="464,206">
            <sap:WorkflowViewStateService.ViewState>
              <scg3:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg3:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Throw DisplayName="Throw ArgumentException" Exception="[New ArgumentException(&quot;Please specify the file specification to search for&quot;, &quot;FileSpec&quot;)]" sap:VirtualizedContainerService.HintSize="269,100" />
            </If.Then>
          </If>
        </Sequence>
        <Assign DisplayName="Form Qualified FileSpec" sap:VirtualizedContainerService.HintSize="763,58">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[FileSpecToMatch]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[Path.Combine(SourcesDirectory, "**", FileSpec)]</InArgument>
          </Assign.Value>
        </Assign>
        <mtbwa:FindMatchingFiles DisplayName="Find Matching Files" sap:VirtualizedContainerService.HintSize="763,22" MatchPattern="[FileSpecToMatch]" Result="[MatchingFiles]" />
        <If Condition="[MatchingFiles.Any()]" DisplayName="Handle Matching Files" sap:VirtualizedContainerService.HintSize="763,1190">
          <sap:WorkflowViewStateService.ViewState>
            <scg3:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg3:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence DisplayName="Process Matching Files" sap:VirtualizedContainerService.HintSize="538,1084">
              <sap:WorkflowViewStateService.ViewState>
                <scg3:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg3:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ForEach x:TypeArguments="x:String" DisplayName="Enumerate Matching Files" sap:VirtualizedContainerService.HintSize="516,960" Values="[MatchingFiles]">
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="path" />
                  </ActivityAction.Argument>
                  <Sequence sap:VirtualizedContainerService.HintSize="486,854">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg3:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg3:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <mtbwa:WriteBuildMessage DisplayName="Log Update" sap:VirtualizedContainerService.HintSize="464,22" Importance="[BuildMessageImportance.Low]" Message="[String.Format(&quot;Updating version information in {0}&quot;, path)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                    <If Condition="[AssemblyVersionReplacementPattern &lt;&gt; String.Empty And AssemblyVersionReplacementPattern &lt;&gt; &quot;Value Not Found&quot;]" DisplayName="If AssemblyVersion is defined" sap:VirtualizedContainerService.HintSize="464,314">
                      <If.Then>
                        <Sequence DisplayName="Convert Pattern and Replace AssemblyVersion" sap:VirtualizedContainerService.HintSize="281,208">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:String" Name="AssemblyVersion" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg3:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg3:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <tva:ConvertVersionPattern BuildNumber="[BuildDetail.BuildNumber]" BuildNumberPrefix="[BuildNumberPrefix]" ConvertedVersionNumber="[AssemblyVersion]" sap:VirtualizedContainerService.HintSize="200,22" VersionPattern="[AssemblyVersionReplacementPattern]" />
                          <tva:ReplaceVersionInFile DisplayName="Replace AssemblyVersion" FilePath="[path]" ForceCreate="[ForceCreateVersion]" sap:VirtualizedContainerService.HintSize="200,22" ReplacementVersion="[AssemblyVersion]" VersionType="[TfsBuild.Versioning.Activities.VersionTypeOptions.AssemblyVersion]" />
                        </Sequence>
                      </If.Then>
                    </If>
                    <If Condition="[AssemblyFileVersionReplacementPattern &lt;&gt; String.Empty And AssemblyFileVersionReplacementPattern &lt;&gt; &quot;Value Not Found&quot;]" DisplayName="If AssemblyFileVersion is defined" sap:VirtualizedContainerService.HintSize="464,314">
                      <If.Then>
                        <Sequence DisplayName="Convert Pattern and Replace AssemblyFileVersion" sap:VirtualizedContainerService.HintSize="281,208">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:String" Name="AssemblyFileVersion" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg3:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg3:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <tva:ConvertVersionPattern BuildNumber="[BuildDetail.BuildNumber]" BuildNumberPrefix="[BuildNumberPrefix]" ConvertedVersionNumber="[AssemblyFileVersion]" sap:VirtualizedContainerService.HintSize="200,22" VersionPattern="[AssemblyFileVersionReplacementPattern]" />
                          <tva:ReplaceVersionInFile DisplayName="Replace AssemblyFileVersion" FilePath="[path]" ForceCreate="[ForceCreateVersion]" sap:VirtualizedContainerService.HintSize="200,22" ReplacementVersion="[AssemblyFileVersion]" VersionType="[TfsBuild.Versioning.Activities.VersionTypeOptions.AssemblyFileVersion]" />
                        </Sequence>
                      </If.Then>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ForEach>
            </Sequence>
          </If.Then>
          <If.Else>
            <mtbwa:WriteBuildWarning DisplayName="Warn No Matches Found" sap:VirtualizedContainerService.HintSize="200,1084" Message="[String.Format(&quot;No version information files found matching {0}&quot;, FileSpecToMatch)]" />
          </If.Else>
        </If>
      </Sequence>
    </Sequence>
  </Sequence>
</Activity>